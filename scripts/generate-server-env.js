w#!/usr/bin/env node

/**
 * This script generates server environment variables from the root .env file
 * It's meant to be run before starting or building the server
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import { dirname } from 'path';
import dotenv from 'dotenv';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Load environment variables from root .env file
const rootEnvPath = path.resolve(__dirname, '../.env');
const envConfig = dotenv.parse(fs.readFileSync(rootEnvPath));

// Create server .env file content
const serverEnvContent = `# This file is auto-generated from the root .env file
# Do not edit this file directly

# Database credentials
DB_USER=${envConfig.DB_USER || 'postgres'}
DB_PASSWORD=${envConfig.DB_PASSWORD || ''}
DB_HOST=${envConfig.DB_HOST || 'localhost'}
DB_PORT=${envConfig.DB_PORT || '5432'}
DB_NAME=${envConfig.DB_NAME || 'astralis'}

# Environment
NODE_ENV=${envConfig.NODE_ENV || 'development'}

# Database URLs
DATABASE_URL=${envConfig.DATABASE_URL || '"postgresql://postgres@localhost:5432/astralis?schema=public"'}
TEST_DATABASE_URL=${envConfig.TEST_DATABASE_URL || '"postgresql://postgres@localhost:5432/astralis_test?schema=public"'}

# Email settings
EMAIL_USER=${envConfig.EMAIL_USER || 'your_email'}
EMAIL_APP_PASSWORD=${envConfig.EMAIL_APP_PASSWORD || 'your_password'}
CONTACT_EMAIL_RECIPIENT=${envConfig.CONTACT_EMAIL_RECIPIENT || 'your_email'}

# Server settings
PORT=${envConfig.PORT || '4000'}
CLIENT_URL=${envConfig.CLIENT_URL || 'http://localhost:5173'}

# JWT Authentication
JWT_SECRET=${envConfig.JWT_SECRET || 'your_jwt_secret_key_here'}
JWT_EXPIRES_IN=${envConfig.JWT_EXPIRES_IN || '7d'}
`;

// Write to server .env file
const serverEnvPath = path.resolve(__dirname, '../server/.env');
fs.writeFileSync(serverEnvPath, serverEnvContent);

console.log(`âœ… Generated server environment variables at ${serverEnvPath}`); 